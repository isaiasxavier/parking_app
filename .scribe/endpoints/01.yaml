name: Vehicles
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/vehicles
    metadata:
      groupName: Vehicles
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List all vehicles for the authenticated user.'
      description: |-
        This method retrieves all vehicle instances associated with the authenticated user's ID.
        It ensures that the user has the permission to view their own vehicles.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/vehicles could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vD3eVZ8bE4da6gf5Pkah6c1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/vehicles
    metadata:
      groupName: Vehicles
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new vehicle.'
      description: |-
        Validates the incoming request and creates a new vehicle instance for the authenticated user.
        It ensures that the user has the permission to create a new vehicle.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      plate_number:
        name: plate_number
        description: ''
        required: true
        example: reprehenderit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      plate_number: reprehenderit
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Pbgce4kfhva3EaDV86Z6d15'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/vehicles/{id}'
    metadata:
      groupName: Vehicles
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified vehicle.'
      description: 'Retrieves and returns information about a specific vehicle, ensuring that the user has permission to view it.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the vehicle.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/vehicles/1 could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 84k3Zdca6vPa1DbefEVg65h'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/vehicles/{id}'
    metadata:
      groupName: Vehicles
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified vehicle.'
      description: |-
        Validates the incoming request and updates the specified vehicle instance.
        It ensures that the user has the permission to update the vehicle.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the vehicle.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      plate_number:
        name: plate_number
        description: ''
        required: true
        example: eaque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      plate_number: eaque
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gvc3Vea6fPEDh65ad1bZ84k'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/vehicles/{id}'
    metadata:
      groupName: Vehicles
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified vehicle.'
      description: |-
        Deletes the specified vehicle instance, ensuring that the user has permission to delete it.
        Returns a no-content response on successful deletion.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the vehicle.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Ea3e86bPv6c4hgVdkaDZ5f1'
    controller: null
    method: null
    route: null
    custom: []
